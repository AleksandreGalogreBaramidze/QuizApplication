// Generated by Dagger (https://dagger.dev).
package com.example.quizapplication.di;

import com.example.quizapplication.parser.JsonParser;
import com.example.quizapplication.repository.JsonRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Module_ProvideRepositoryFactory implements Factory<JsonRepository> {
  private final Provider<JsonParser> jsonParserProvider;

  public Module_ProvideRepositoryFactory(Provider<JsonParser> jsonParserProvider) {
    this.jsonParserProvider = jsonParserProvider;
  }

  @Override
  public JsonRepository get() {
    return provideRepository(jsonParserProvider.get());
  }

  public static Module_ProvideRepositoryFactory create(Provider<JsonParser> jsonParserProvider) {
    return new Module_ProvideRepositoryFactory(jsonParserProvider);
  }

  public static JsonRepository provideRepository(JsonParser jsonParser) {
    return Preconditions.checkNotNullFromProvides(Module.INSTANCE.provideRepository(jsonParser));
  }
}
