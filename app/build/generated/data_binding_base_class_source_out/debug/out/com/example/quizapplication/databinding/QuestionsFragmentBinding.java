// Generated by view binder compiler. Do not edit!
package com.example.quizapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.quizapplication.R;
import com.example.quizapplication.ui.custom_view.RectCustomView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QuestionsFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backImageView;

  @NonNull
  public final RectCustomView bgCustomView;

  @NonNull
  public final AppCompatButton questionNextButton;

  @NonNull
  public final TextView questionTextView;

  @NonNull
  public final TextView subjectTitle;

  @NonNull
  public final RecyclerView subjectsRecyclerView;

  private QuestionsFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backImageView, @NonNull RectCustomView bgCustomView,
      @NonNull AppCompatButton questionNextButton, @NonNull TextView questionTextView,
      @NonNull TextView subjectTitle, @NonNull RecyclerView subjectsRecyclerView) {
    this.rootView = rootView;
    this.backImageView = backImageView;
    this.bgCustomView = bgCustomView;
    this.questionNextButton = questionNextButton;
    this.questionTextView = questionTextView;
    this.subjectTitle = subjectTitle;
    this.subjectsRecyclerView = subjectsRecyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QuestionsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuestionsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.questions_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuestionsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backImageView;
      ImageButton backImageView = ViewBindings.findChildViewById(rootView, id);
      if (backImageView == null) {
        break missingId;
      }

      id = R.id.bgCustomView;
      RectCustomView bgCustomView = ViewBindings.findChildViewById(rootView, id);
      if (bgCustomView == null) {
        break missingId;
      }

      id = R.id.questionNextButton;
      AppCompatButton questionNextButton = ViewBindings.findChildViewById(rootView, id);
      if (questionNextButton == null) {
        break missingId;
      }

      id = R.id.questionTextView;
      TextView questionTextView = ViewBindings.findChildViewById(rootView, id);
      if (questionTextView == null) {
        break missingId;
      }

      id = R.id.subjectTitle;
      TextView subjectTitle = ViewBindings.findChildViewById(rootView, id);
      if (subjectTitle == null) {
        break missingId;
      }

      id = R.id.subjectsRecyclerView;
      RecyclerView subjectsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (subjectsRecyclerView == null) {
        break missingId;
      }

      return new QuestionsFragmentBinding((ConstraintLayout) rootView, backImageView, bgCustomView,
          questionNextButton, questionTextView, subjectTitle, subjectsRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
